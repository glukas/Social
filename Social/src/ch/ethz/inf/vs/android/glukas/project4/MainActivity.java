package ch.ethz.inf.vs.android.glukas.project4;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import ch.ethz.inf.vs.android.glukas.project4.RegistrationDialogFragment.RegistrationDialogFragmentDelegate;import ch.ethz.inf.vs.android.glukas.project4.database.DatabaseAccess;import ch.ethz.inf.vs.android.glukas.project4.database.DatabaseManager;import ch.ethz.inf.vs.android.glukas.project4.exceptions.FailureReason;import ch.ethz.inf.vs.android.glukas.project4.networking.FriendshipRequest;import ch.ethz.inf.vs.android.glukas.project4.protocol.Protocol;import ch.ethz.inf.vs.android.glukas.project4.protocol.ProtocolInterface;import ch.ethz.inf.vs.android.glukas.project4.protocol.parsing.MessageParser;import ch.ethz.inf.vs.android.glukas.project4.security.NetworkMessage;import ch.ethz.inf.vs.android.glukas.project4.security.SecureChannelDelegate;import ch.ethz.inf.vs.android.glukas.project4.security.ZeroCredentialStorage;import ch.ethz.inf.vs.android.glukas.project4.test.Data;import ch.ethz.inf.vs.android.glukas.project4.test.StaticSecureChannel;import android.annotation.SuppressLint;import android.app.ActionBar;import android.app.ActionBar.Tab;import android.app.Activity;import android.app.AlertDialog;import android.app.Dialog;import android.app.DialogFragment;import android.app.Fragment;import android.app.FragmentTransaction;import android.app.ListFragment;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.database.Cursor;import android.graphics.Bitmap;import android.graphics.Bitmap.Config;import android.graphics.BitmapFactory;import android.graphics.Canvas;import android.graphics.Paint;import android.graphics.PorterDuff.Mode;import android.graphics.PorterDuffXfermode;import android.graphics.Rect;import android.graphics.RectF;import android.graphics.drawable.BitmapDrawable;import android.graphics.drawable.Drawable;import android.net.Uri;import android.nfc.NdefMessage;import android.nfc.NfcAdapter;import android.nfc.NfcAdapter.OnNdefPushCompleteCallback;import android.nfc.NfcEvent;import android.os.Bundle;import android.os.Environment;import android.os.Parcelable;import android.provider.MediaStore;import android.text.Editable;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.View.OnFocusChangeListener;import android.view.ViewGroup;import android.view.inputmethod.InputMethodManager;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;@SuppressLint("ValidFragment")public class MainActivity extends WallActivity implements OnNdefPushCompleteCallback, UserDelegate, RegistrationDialogFragmentDelegate {	private NfcAdapter nfcAdapter;	private FriendshipRequest nextRequest;	private FriendListAdapter friendListAdapter;	private List<User> friendsList;		////	//LIFECYCLE	////		@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.home_screen);		setUpNFCExchange();		//set up views		ActionBar actionBar = getActionBar();		actionBar.setDisplayShowHomeEnabled(false);		actionBar.setDisplayShowTitleEnabled(false);		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);		ActionBar.Tab tab1 = actionBar.newTab().setText("My Wall");		ActionBar.Tab tab2 = actionBar.newTab().setText("View Friends");		WallFragment wallFragment = new WallFragment();		wallFragment.setListAdapter(userWallAdapter);		tab1.setTabListener(new MyTabListener(wallFragment));		FriendListFragment friendListFragment = new FriendListFragment();		friendListAdapter = new FriendListAdapter(this, new ArrayList<User>());		friendListFragment.setListAdapter(friendListAdapter);		tab2.setTabListener(new MyTabListener(friendListFragment));		actionBar.addTab(tab1);		actionBar.addTab(tab2);	}	@Override	protected void onPause() {		super.onPause();	}	@Override	protected void onResume() {		checkUserRegistered();				super.onResume();				updateFriends();	}	private void updateFriends() {		if (mProtocol.getUser() != null) {			friendsList = dbmanager.getUserFriendsList();			int id = new UserId().hashCode();//Testing (add some users to begin with)			if (friendsList.size() == 0) {				friendsList = Arrays.asList(new User("Alice " + id), new User("Bob " + id), new User("Carol " + id));				for (User friend : friendsList) {					dbmanager.putFriend(friend);				}			}			for (User user : friendsList) {				this.friendListAdapter.add(user);			}		}	}		private void checkUserRegistered() {		if(mProtocol.getUser() == null) {			Log.d(this.getClass().toString(), "No user registered");			// Create registration dialog			RegistrationDialogFragment dialog = new RegistrationDialogFragment(this);			dialog.setCancelable(false);			dialog.show(this.getFragmentManager(), "User registration");		} else {			wallOwner = mProtocol.getUser();			Log.d(this.getClass().toString(), "User " + dbmanager.getUser().username +" already registered");		}	}	////	//NFC (Friendship Request)	////	private void setUpNFCExchange() {		nfcAdapter = NfcAdapter.getDefaultAdapter(this);		if (nfcAdapter == null) {			Toast.makeText(this, "NFC is not available", Toast.LENGTH_LONG)			.show();			finish();			return;		}		createNextRequest();	}	private void createNextRequest() {		nextRequest = new FriendshipRequest(dbmanager.getUser());		nfcAdapter.setNdefPushMessageCallback(nextRequest, this);		nfcAdapter.setOnNdefPushCompleteCallback(this, this);	}	////	//OnNdefPushCompleteCallback	////	@Override	public void onNdefPushComplete(NfcEvent event) {		Log.d(this.getClass().toString(), "onNdefPushComplete");		FriendshipRequest.setCurrentRequest(nextRequest);		createNextRequest();	}	public class FriendListFragment extends ListFragment {		public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){			View view = inflater.inflate(R.layout.friend_list_tab, container, false);			return view;		}		@Override		public void onListItemClick (ListView l, View v, int position, long id) {			Intent contactDetail = new Intent(getActivity(), ContactDetailActivity.class);			BasicUser friend = ((BasicUser)this.getListAdapter().getItem(position));			Log.d(this.getClass().toString(), "clicked on user " + friend +" id : " + friend.getId());			contactDetail.putExtra(ContactDetailActivity.USERID_EXTRA, friend.id.getBytes());			startActivity(contactDetail);		}	}	public class AddFriendFragment extends Fragment {		public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){			View view = inflater.inflate(R.layout.add_friend_tab, container, false);			return view;		}	}	public class ToDoFragment extends Fragment {		public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){			View view = inflater.inflate(R.layout.todo_tab, container, false);			return view;		}	}	public class MyTabListener implements ActionBar.TabListener {		Fragment fragment;		public MyTabListener(Fragment fragment) {			this.fragment = fragment;		}		public void onTabSelected(Tab tab, FragmentTransaction ft) {			ft.replace(R.id.home_screen, fragment);		}		public void onTabUnselected(Tab tab, FragmentTransaction ft) {			ft.remove(fragment);		}		public void onTabReselected(Tab tab, FragmentTransaction ft) {			// nothing done here		}	}	////	//RegistrationDialogFragmentDelegate	////	@Override	public void onUserRegistered(String username) {		this.dbmanager.putUser(new User(username));		wallOwner = mProtocol.getUser();	}	}